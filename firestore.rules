rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================
    // Users Collection
    // ============================
    match /users/{userId} {

      function getRole() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      }

      function isAdmin() {
        return getRole() == "roles_admin";
      }

      function isTeamLeader() {
        return getRole() == "roles_team_leader";
      }

      function isOwner() {
        return request.auth.uid == userId;
      }

      // Read: Admin & Team Leader bisa lihat semua, Member cuma dirinya
      allow get, list: if request.auth != null &&
        (isAdmin() || isTeamLeader() || isOwner());

      // Write: hanya owner bisa update/create/delete datanya sendiri
      allow create: if request.auth != null && isOwner();
      allow update, delete: if request.auth != null && isOwner();

      // ============================
      // Tasks Subcollection
      // ============================
      match /tasks/{taskId} {
        function isTaskOwner() {
          return request.auth.uid == userId;
        }

        allow get, list: if request.auth != null &&
          (isAdmin() || isTeamLeader() || isTaskOwner());
        allow create: if request.auth != null && isTaskOwner();
        allow update, delete: if request.auth != null && isTaskOwner();

        // Revisions Subcollection
        match /revisions/{revisionId} {
          allow get, list: if request.auth != null &&
            (isAdmin() || isTeamLeader() || isTaskOwner());
          allow create, update, delete: if request.auth != null && isTaskOwner();
        }

        // Comments Subcollection
        match /comments/{commentId} {
          allow get, list: if request.auth != null &&
            (isAdmin() || isTeamLeader() || isTaskOwner());
          allow create, update, delete: if request.auth != null && isTaskOwner();
        }
      }
    }

    // ============================
    // Roles Collections
    // ============================
    match /roles_team_member/{userId} {
      function isAdmin() { return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).exists(); }
      allow get: if request.auth != null;
      allow list: if false;
      allow create: if isAdmin();
      allow update: if false;
      allow delete: if isAdmin() && resource != null;
    }

    match /roles_team_leader/{userId} {
      function isAdmin() { return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).exists(); }
      allow get: if request.auth != null;
      allow list: if false;
      allow create: if isAdmin();
      allow update: if false;
      allow delete: if isAdmin() && resource != null;
    }

    match /roles_admin/{userId} {
      function isAdmin() { return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).exists(); }
      allow get: if request.auth != null;
      allow list: if false;
      allow create: if isAdmin();
      allow update: if false;
      allow delete: if isAdmin() && resource != null;
    }
  }
}
