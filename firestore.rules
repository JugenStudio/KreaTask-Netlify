rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /*
    ============================================================
    🔐 FIRESTORE SECURITY RULES — KREATASK
    Versi: v3.1 (sinkron dengan seed.js & seedRoles.js)
    ============================================================
    📌 Role Hierarchy:
      - roles_super_admin → level tertinggi (akses penuh)
      - roles_admin → manajemen data & user
      - roles_team_leader → manajemen task tim
      - roles_team_member → tugas pribadi
      - roles_unassigned → setara dengan team_member (akses produktif dasar)
    ============================================================
    */

    // === 🔑 AUTH HELPER ===
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getUserRole(uid) {
      return exists(/databases/$(database)/documents/users/$(uid))
        ? get(/databases/$(database)/documents/users/$(uid)).data.role
        : "roles_unassigned";
    }

    // === 🧭 ROLE CHECK FUNCTIONS ===
    function isSuperAdmin() {
      return isUserAuthenticated() &&
        getUserRole(request.auth.uid) == "roles_super_admin";
    }

    function isAdmin() {
      return isUserAuthenticated() && (
        getUserRole(request.auth.uid) == "roles_admin" ||
        isSuperAdmin()
      );
    }

    function isTeamLeader() {
      return isUserAuthenticated() && (
        getUserRole(request.auth.uid) == "roles_team_leader" ||
        isAdmin()
      );
    }

    // Unassigned dianggap sebagai member aktif (akses sama seperti team_member)
    function isTeamMember() {
      return isUserAuthenticated() && (
        getUserRole(request.auth.uid) == "roles_team_member" ||
        getUserRole(request.auth.uid) == "roles_unassigned" ||
        isTeamLeader()
      );
    }

    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    /*
    ============================================================
    👤 USERS COLLECTION
    ------------------------------------------------------------
    - Pemilik akun dapat lihat & ubah datanya sendiri.
    - Admin dan SuperAdmin dapat melihat semua user.
    - Admin & SuperAdmin dapat hapus user lain (bukan dirinya sendiri).
    ============================================================
    */
    match /users/{userId} {
      allow get, update: if isOwner(userId);
      allow create: if isUserAuthenticated();
      allow list: if isAdmin();
      allow delete: if (isAdmin() || isSuperAdmin()) && request.auth.uid != userId;
    }

    /*
    ============================================================
    📋 TASKS COLLECTION
    ------------------------------------------------------------
    - SuperAdmin & Admin → full access
    - TeamLeader → kelola task timnya
    - TeamMember & Unassigned → kelola task milik sendiri
    ============================================================
    */
    match /tasks/{taskId} {
      // Full access untuk SuperAdmin dan Admin
      allow read, list, create, update, delete: if isSuperAdmin() || isAdmin();

      // Team Leader dapat membuat dan mengubah task timnya
      allow read, list, create, update: if isTeamLeader();

      // Team Member & Unassigned hanya bisa kelola task mereka sendiri
      allow read: if isTeamMember() && request.auth.uid in resource.data.assigneesIds;
      allow list: if isTeamMember();
      allow create: if isTeamMember()
                    && request.resource.data.assigneesIds.size() == 1
                    && request.auth.uid in request.resource.data.assigneesIds;
      allow update: if isTeamMember() && request.auth.uid in resource.data.assigneesIds;
      // Tidak ada izin delete untuk member biasa
    }

    /*
    ============================================================
    🔔 NOTIFICATIONS COLLECTION
    ------------------------------------------------------------
    - Setiap user hanya bisa baca / hapus notifikasinya sendiri.
    - Create hanya jika notifikasi miliknya sendiri.
    ============================================================
    */
    match /notifications/{notificationId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    /*
    ============================================================
    ⚙️ SETTINGS COLLECTION
    ------------------------------------------------------------
    - Semua user bisa baca (tema, bahasa, preferensi UI)
    - SuperAdmin & Admin bisa ubah konfigurasi global
    ============================================================
    */
    match /settings/{settingId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isSuperAdmin() || isAdmin();
    }

    /*
    ============================================================
    🧩 ROLES COLLECTION
    ------------------------------------------------------------
    - Semua user boleh baca (untuk UI dropdown & info role)
    - Hanya SuperAdmin boleh ubah atau tambah role sistem
    ============================================================
    */
    match /roles/{roleId} {
      allow read, list: if isUserAuthenticated();
      allow create, update, delete: if isSuperAdmin();
    }
  }
}
