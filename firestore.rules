rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // Gets the role of the currently signed-in user from the 'users' collection.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Checks if the user is a Super User (Direktur Utama).
    function isAdmin() {
      return isSignedIn() && getUserRole() == 'Direktur Utama';
    }

    // Checks if the user is a Director (Direktur Operasional or Utama).
    function isDirector() {
      return isSignedIn() && (getUserRole() == 'Direktur Operasional' || getUserRole() == 'Direktur Utama');
    }

    // Checks if the user is an assignee of a specific task.
    function isAssignee(task) {
      return isSignedIn() && request.auth.uid in task.assignees.map(a => a.id);
    }
    
    // --- Collection Rules ---

    // USERS Collection
    // Users can read their own profile.
    // Directors can read all user profiles.
    // Only admins can create, update, or delete users.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isDirector());
      allow list: if isDirector();
      allow create, update, delete: if isAdmin();
    }

    // TASKS Collection (Global)
    // Employees can only read tasks assigned to them.
    // Directors can read all tasks.
    // Any signed-in user can create a task.
    // Employees can only update tasks assigned to them.
    // Directors and Admins can update any task.
    // Only Admins can delete tasks.
    match /tasks/{taskId} {
      allow read: if (isAssignee(resource.data)) || isDirector();
      allow list: if isDirector(); // Allow directors to list all tasks, employees filter on client-side
      allow create: if isSignedIn();
      allow update: if (isAssignee(resource.data)) || isDirector();
      allow delete: if isAdmin();
    }
    
    // NOTIFICATIONS Collection
    // Users can only access notifications intended for them.
    match /notifications/{notificationId} {
      allow read, list, create, update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
  }
}
